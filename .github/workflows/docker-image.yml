name: Docker
on:
  push:
  
jobs:
  check-updates:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.outputs.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        id: "rust-toolchain"
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/git
            ~/.cargo/registry
            targe
          key: "${{runner.os}} Rust ${{steps.rust-toolchain.outputs.cachekey}} Lock ${{hashFiles('Cargo.lock')}}"
      - run: cargo run
        id: outputs
        env:
          RUST_BACKTRACE: 1
          
  docker:
    runs-on: ubuntu-latest
    needs: [check-updates]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.check-updates.outputs.matrix) }}
    name: build '${{ matrix.path }}'
    steps:
      - name: Echo matrix
        run: |
          echo 'tag=${{ matrix.tag }}'
          echo 'path=${{ matrix.path }}'
          echo 'name=${{ matrix.name }}'
          echo 'index=${{ matrix.index }}'
          echo 'platforms=${{ matrix.platforms }}'
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        if: ${{ matrix.platforms != 'linux/amd64' }}
        uses: docker/setup-qemu-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ format('ghcr.io/{0}', matrix.name) }}
          tags: |
            ${{ matrix.tag }}
            latest
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.path }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}}
          platforms: ${{ inputs.platforms }}
      - name: update index.json
        run: echo '{{ matrix.index }}' >> ${{ format('{0}/index.json') matrix.path }}
