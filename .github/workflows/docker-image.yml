name: Docker
on:
  push:
  
jobs:
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "test=hello" >> "$GITHUB_OUTPUT"
      - id: step2
        run: echo "test=world" >> "$GITHUB_OUTPUT"
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - env:
          OUTPUT1: ${{needs.job1.outputs.output1}}
          OUTPUT2: ${{needs.job1.outputs.output2}}
        run: echo "$OUTPUT1 $OUTPUT2"

  check-update:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.outputs.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        id: "rust-toolchain"
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/git
            ~/.cargo/registry
            targe
          key: "${{runner.os}} Rust ${{steps.rust-toolchain.outputs.cachekey}} Lock ${{hashFiles('Cargo.lock')}}"
      - run: cargo run
        env:
          RUST_BACKTRACE: 1
      - run: cat output.txt >> $GITHUB_OUTPUT
        id: outputs
      - run: cat output.txt
      
  test:
    runs-on: ubuntu-latest
    needs: [check-update]
    steps:
      - name: Echo matrix
        run: echo "${{ needs.check-update.outputs.matrix }}"

          
  docker:
    runs-on: ubuntu-latest
    needs: [check-update]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.check-update.outputs.matrix) }}
    name: build "${{ matrix.path }}
    steps:
      - name: Echo matrix
        run: |
          echo "${{ matrix.tag }}"
          echo "${{ matrix.path }}
